import jwt from 'jsonwebtoken';
import dotenv from 'dotenv';

dotenv.config();

const auth = async (req, res, next) => {
    try {
        // Extract the token from the Authorization header
        const token = req.headers.authorization?.split(" ")[1]; // Format: "Bearer <token>"

        if (!token) {
            return res.status(403).json({ message: "No token provided ok , access denied" });
        }

        // Check if the token is custom (generated by your app) or from a third-party service like Google
        const isCustomAuth = token.length < 500;

        let decodedData;

        if (token && isCustomAuth) {
            // Custom token: Decode using your app's secret key
            decodedData = jwt.verify(token, process.env.JWT_SECRET);
            req.userId = decodedData?.id; // Attach the user's ID to the request
        } else {
            // Google OAuth token: Decode without a secret
            decodedData = jwt.decode(token);
            req.userId = decodedData?.sub; // Attach Google's user ID (sub) to the request
        }

        next(); // Pass control to the next middleware or route handler
    } catch (error) {
        console.error("Error in auth middleware:", error.message);
        res.status(401).json({ message: "Unauthorized, invalid token" });
    }
};

export default auth;
